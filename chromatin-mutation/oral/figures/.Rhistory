lines(pdfs[,3]~q, col = 'green')
legend("topright",
legend = c("u = 100, o2 = 100", "u = 100, o2 = 400", "u = 100, o2 = 625"),
col = c('black','red','green'),
lty = 1,
bty = "n",
cex = .8)
#the second plot should show three corresponding CDFs
#calculate the CDFs
cdfs <- sapply(sigma, FUN = function(x){pnorm(q,mu,x)})
plot(cdfs[,1]~q, type = 'l',
xlab = 'Tail Length (cm)',
ylab = "Probability",
main = "Cumulative Probability of Distribution\nWith Varying Variance")
lines(cdfs[,2]~q, col = 'red')
lines(cdfs[,3]~q, col = 'green')
legend("topleft",
legend = c("u = 100, o2 = 100", "u = 100, o2 = 400", "u = 100, o2 = 625"),
col = c('black','red','green'),
lty = 1,
bty = "n",
cex = .8)
1 - pnorm(180, mu, sigma)
mu <- 177
sigma <- 7.1
#proportion excluded
1 - pnorm(180, mu, sigma)
pnorm(173, mu, sigma)
(183 - men_mu) / (men_sigma)
# ---- question 4 ----
#if the mean height of British men is 177 cm with a standard
#deviation of 7.1 cm, what proportion of British men are
#excluded from being spies by this height restriction?
#assume height follows a normal distribution
#set parameters for men
men_mu <- 177
men_sigma <- 7.1
#proportion excluded
(p_men_excluded <- 1 - pnorm(180, men_mu, men_sigma))
#the mean height of british women is 163.3 cm,
#with a standard deviation of 6.4 cm. assuming a normal distribution
#of female height, what fraction of women meet MI5's  height standard?
#set parameters for women
women_mu <- 163.3
women_sigma <- 6.4
#fraction of women that meet MI5's height standard
pnorm(173, women_mu, women_sigma)
#imagine that mi5 wants to change its maximum height for
#female spies. its goal is to exclude the same proportion
#of women as men.
#What should the new maximum height for women be?
#(round your answer to the nearest centimeter)
(women_q <- qnorm(1 - p_men_excluded, women_mu, women_sigma))
round(women_q, 0)
#Sean Connery, the original James Bond, is 183 cm tall.
#By how many standard deviations does he exceed the height
# limit for spies?
(183 - men_mu) / (men_sigma)
men_mu
men_sigma
pnorm(.8450704)
?pnorm
qnorm(.8009642, men_mu, men_sigma)
2 * pnorm(-1)
pnorm(-1)
pnorm(1)
65, 95, 99
2 * pnorm(-1)
1 - 2 * pnorm(-1)
1 - 2 * pnorm(-1)
1 - 2 * pnorm(-5)
qnorm(.5)
qnorm(.5)
1 - 2 * qnorm(.5)
1 - 2 * qnorm(.25)
qnorm(.25)
pnorm(.67)
pnorm(-.67)
pnorm(.67) - pnorm(-.67)
qnorm(.25)
qnorm(.025)
abs(qnorm(.25))
abs(qnorm(.005))
pnorm(1)
pnorm(2)
pnorm(3)
abs(qnorm(.005))
?binom.test
pbinom(x,n,p_null) * 2
#step 4 : calculate test statistic
x <- 7
#step 5 : calculate p-value and state conclusion
n <- 20
p_null <- .5
#calc p-value
pbinom(x,n,p_null) * 2
binom.test(x,n)
barplot(dbinom(0:20,n,p_null),
names.arg=0:20,
ylab="prob",
xlab="num females",
col=c(rep("red",8),rep("gray",5),rep("red",8)))
binom.test(x,n,p_null)
total <- 20
female <- 7
#is this a 50/50 sex ratio (1:1)
phat <- females/total
female <- 7
#is this a 50/50 sex ratio (1:1)
phat <- female/total
?pbinom
dbinom(8, numplants, p_wrinkled)
#calculate the following values:
numplants <- 24
p_wrinkled <- 1/4
#a. The probability that exactly 8 plants will have wrinkled peas.
dbinom(8, numplants, p_wrinkled)
pbinom(8, numplants, p_wrinkled)
pbinom(11, numplants, p_wrinkled, lower.tail = FALSE)
qbinom(.025, numplants, p_wrinkled)
phat <- nfemales / total
#experiment parameters
total <- 25
nfemales <- 15
nmales <- 10
# a. Use the data to estimate the probability p that a reproductive offspring is female.
phat <- nfemales / total
# b. Use the Agresti-Coull method to calculate the 95% confidence interval for p.
p_prime <- (nfemales + 2)/(total + 4)
s_pp <- sqrt((p_prime * (1 - p_prime))/(total + 4))
c(p_prime - 2 * s_pp, p_prime + 2 * s_pp)
phat <- nfemales / total
# b. Use the Agresti-Coull method to calculate the 95% confidence interval for p.
p_prime <- (nfemales + 2)/(total + 4)
s_pp <- sqrt((p_prime * (1 - p_prime))/(total + 4))
c(p_prime - 2 * s_pp, p_prime + 2 * s_pp)
# c. Based on the confidence interval you calculated, briefly explain whether it is plausible that the true sex ratio is 1:1 (that is, p = 0.5).
# It is plausible that the true sex ratio is 1:1, as the confidence interval includes .5 .
# d. Now carry out a formal test of the hypothesis that the sex ratio is 1:1. Perform this test by hand in R, explicitly carrying out the five steps of hypothesis testing:
# 1) State the null and alternative hypotheses.
# H0: The sex ratio is .5
# Ha: The sex ratio is not equal to .5
# 2) State the significance level.
# alpha = 0.05
# 3) Define the test statistic.
#  The test stastistic is X, the number of females in a sample of 25 offspring
p_null <- 0.5
# 4) Calculate the test statistic from the data.
pbinom(nfemales, total, 0.5) * 2
pbinom(nfemales - 1, total, 0.5, lower.tail = FALSE) * 2
nfemales
binom.test(nfemales, total)
pbinom(nfemales - 1, total, 0.5, lower.tail = FALSE) * 2
c(p_prime - 2 * s_pp, p_prime + 2 * s_pp)
1/5
dog_food / total
total <- 18
dog_food <- 2
people_food <- total - dog_food
# a. What proportion of participants chose dog food as their favorite?
dog_food / total
1/5
qbinom(.025, numplants, p_wrinkled)
(p_null <- 1/5)
binom.test(dog_food,total,p_null)
binom.test(on_x_chr, total, p_null)
total <- 24
on_x_chr <- 11
p_null <- 1/4
# a. Use these data and binom.test to test the theory that spermatogenesis genes are found disproportionately on the X chromosome.
binom.test(on_x_chr, total, p_null)
c(p_prime - 2 * s_pp, p_prime + 2 * s_pp)
binom.test(on_x_chr, total, p_null)
matrix(data = c(c(0,6),(c(6,0))))
matrix(data = c(c(0,6),c(6,0))))
matrix(data = c(0,6,6,0), nrow = 2, ncol = 2)
fisher.test(matrix(data = c(0,6,6,0), nrow = 2, ncol = 2))
fisher.test(matrix(data = c(1,5,5,1), nrow = 2, ncol = 2))
unlink('code/biometry-lab/midterm/midterm_cache', recursive = TRUE)
unlink('code/biometry-lab/midterm/midterm_cache', recursive = TRUE)
dbinom(30,30)
plot(dbinom(0:1,30,30))
plot(x = dbinom(0:1,30,30))
dbinom(0:1:.01,30,30)
dbinom(seq(0,1,.01),30,30)
dbinom
?dbinom
dbinom(seq(0,90,.5))
dbinom(seq(0,90,.5),30,30)
dnorm(seq(0,90,.5),30,30)
plot(dnorm(seq(0,90,.5),30,30))
plot(x = seq(0,90,.5), y = dnorm(seq(0,90,.5),30,30))
plot(x = seq(0,90,.5), y = dlnorm(seq(0,90,.5),30,30))
lnorm
?dlnorm
plot(x = seq(0,90,.5), y = dlnorm(seq(0,90,.5),30,30))
plot(x = seq(0,90,.01), y = dlnorm(seq(0,90,.01),30,30))
?dlnorm
library(dplyr)
?transmute_at
?round
x <- seq(0,1,by=0.001)
x
poisson()
?poisson()
poisson()
x <- seq(0,1,by=0.001)
y <- dpois(x,lambda = 0.001)
warnings()
x <- seq(0,10,by=1)
y <- dpois(x,lambda = 0.01)
plot(x,y)
x <- seq(0,10,by=1)
y <- dpois(x,lambda = 0.1)
x <- seq(0,10,by=1)
plot(x,y)
x <- seq(0,10,by=1)
y <- dpois(x,lambda = 1)
plot(x,y)
x <- seq(0,100000,by=1)
y <- dpois(x,lambda = 36)
plot(x,y)
x <- seq(0,100000,by=1)
y <- dpois(x,lambda = 36)
plot(x,y)
x <- seq(0,100000,by=1)
y <- dpois(x,lambda = 10000*1e-6)
plot(x,y)
x <- seq(0,100,by=1)
y <- dpois(x,lambda = 10)
plot(x,y)
x <- seq(0,100,by=1)
y <- dpois(x,lambda = 10)
plot(x,y,t = 'l')
x <- seq(0,100,by=1)
normal <- dpois(x,lambda = 1)
cancer <- dpois(x,lambda = 10)
plot(x,y,t = 'l')
plot(x,y,t = 'l')
points(x,z,t = 'l')
x <- seq(0,100,by=1)
normal <- dpois(x,lambda = 1)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l')
points(x,cancer,t = 'l', col = 'r')
plot(x,normal,t = 'l')
points(x,cancer,t = 'l', col = 'red')
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 1)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l')
points(x,cancer,t = 'l', col = 'red')
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l')
points(x,cancer,t = 'l', col = 'red')
plot(x,normal,t = 'l',
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red')
?legend
plot(x,normal,t = 'l',
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red')
legend(c("Open chromatin","Closed chromatin"), col = c('black','red'))
legend(legend = c("Open chromatin","Closed chromatin"), col = c('black','red'))
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'))
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty='l')
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=c('l','l'))
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=1)
setwd("~/code/comps/chromatin-mutation/oral/figures")
pdf('mut_rate.pdf')
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l',
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red')
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=1)
dev.off()
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red', lwd=3)
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=1)
pdf('mut_rate.pdf')
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=1)
dev.off()
y <- (normal + cancer)/2
plot(x,y)
y <- (normal + cancer)/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
x  <- seq(0,30,by=1)
y <- (normal + cancer)/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
z <- (dpois(x,lambda = 2.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
points(x,z,t = 'l', lwd=3, col = 'r')
points(x,z,t = 'l', lwd=3, col = 'red')
main("foo")
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density",
main = "SNP mutations")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Open chromatin","Closed chromatin"), col = c('black','red'), lty=1)
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density",
main = "SNP mutations in normal tissue")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Closed chromatin","Open chromatin"), col = c('black','red'), lty=1)
pdf('mut_rate.pdf')
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density",
main = "SNP mutations in normal tissue")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Closed chromatin","Open chromatin"), col = c('black','red'), lty=1)
dev.off()
pdf('chr_state.pdf')
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
z <- (dpois(x,lambda = 2.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
points(x,z,t = 'l', lwd=3, col = 'red')
legend('topright',legend = c("Normal sample","Cancer sample"), col = c('black','red'), lty=1)
dev.off()
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
z <- (dpois(x,lambda = 2.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density")
points(x,z,t = 'l', lwd=3, col = 'red')
legend('topright',legend = c("Normal sample","Cancer sample"), col = c('black','red'), lty=1)
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density", main = "Number of ATAC reads overlapping an Insertion")
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density", main = "Number of ATAC reads overlapping an Insertion")
points(x,z,t = 'l', lwd=3, col = 'red')
legend('topright',legend = c("Normal sample","Cancer sample"), col = c('black','red'), lty=1)
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
z <- (dpois(x,lambda = 2.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density", main = "Number of ATAC reads overlapping an SNP")
points(x,z,t = 'l', lwd=3, col = 'red')
legend('topright',legend = c("Normal sample","Cancer sample"), col = c('black','red'), lty=1)
x <- seq(0,20,by=1)
normal <- dpois(x,lambda = 2)
cancer <- dpois(x,lambda = 10)
plot(x,normal,t = 'l', lwd=3,
xlab = "Number of mutations",
ylab = "Density",
main = "SNP mutations in normal tissue")
points(x,cancer,t = 'l', col = 'red', lwd=3)
legend('topright',legend = c("Closed chromatin","Open chromatin"), col = c('black','red'), lty=1)
pdf('chr_state.pdf')
x  <- seq(0,30,by=1)
y <- (dpois(x,lambda = 1.5) + dpois(x, lambda = 14))/2
z <- (dpois(x,lambda = 2.5) + dpois(x, lambda = 9))/2
plot(x,y, t = 'l', lwd = 3, xlab = "Number of ATAC Reads Overlapping Mutation", ylab = "Density", main = "Number of ATAC reads overlapping an SNP")
points(x,z,t = 'l', lwd=3, col = 'red')
legend('topright',legend = c("Normal sample","Cancer sample"), col = c('black','red'), lty=1)
dev.off()
x <- rpois(500,10)
x
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), replace = TRUE, prob = .3)
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), replace = TRUE, prob = c(.3,.7))
x
y
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), size = 500, replace = TRUE, prob = c(.3,.7))
y
reg <- glm(y ~ x, family = binomial)
plot(reg)
summary(reg)
xpred <- range(0,10,by = 0.01)
?predict
ypred <- predict(reg,type="response")
ypred
plot(xpred,ypred)
xpred
reg
xpred <- range(0,10,by = 0.01)
ypred <- predict(reg, x = xpred, type="response")
ypred
xpred <- range(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
ypred
xpred
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
xpred
ypred
plot(xpred,ypred)
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), size = 500, replace = TRUE, prob = c(.1,.9))
reg <- glm(y ~ x, family = binomial)
plot(reg)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred)
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), size = 500, replace = TRUE, prob = c(.3,.7))
reg <- glm(y ~ x, family = binomial)
plot(reg)
x <- rpois(500,10)
y <- sample(c(TRUE,FALSE), size = 500, replace = TRUE, prob = c(.3,.7))
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred)
model_disp
x <- c(0,2,3,7,7,8,9,9)
y <- c(T,T,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred)
x <- c(0,2,3,7,7,8,9,9)
y <- c(T,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred)
x <- c(0,2,3,7,7,8,9,9)
y <- c(T,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, t = 'l', lwd = 3, xlab = 'Number of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Number of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
x <- c(0,1,2,3,7,7,8,9,9)
y <- c(T,F,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Number of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
x <- c(0,1,1,2,3,7,7,8,9,9)
y <- c(T,F,F,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Number of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
pdf('logistic_regression.pdf')
x <- c(0,1,1,2,3,7,7,8,9,9)
y <- c(T,F,F,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(0,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Number of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
dev.off()
x <- c(1,1,1,2,3,7,7,8,9,9)
y <- c(T,F,F,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(1,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Relative enrichment of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
dev.off()
pdf('logistic_regression.pdf')
x <- c(1,1,1,2,3,7,7,8,9,9)
y <- c(T,F,F,F,T,F,F,F,F,F)
reg <- glm(y ~ x, family = binomial)
xpred <- seq(1,10,by = 0.01)
ypred <- predict(reg, list(x = xpred), type="response")
plot(xpred,ypred, ylim=c(0,1), t = 'l', lwd = 3, xlab = 'Relative enrichment of ATAC reads', ylab = 'Probability of mutation', main = "Logistic Regression of SNPs")
points(x,y)
dev.off()
